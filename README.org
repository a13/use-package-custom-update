* Info
  Works as ~:custom~ keyword, but instead of a value takes update function or the second (the first is the original one) argument to the default updater

* Installation

  #+begin_src emacs-lisp
    (use-package use-package-custom-update
      :quelpa
      (use-package-custom-update :repo "a13/use-package-custom-update" :fetcher github :version original))
  #+end_src

* Usage
  #+begin_src emacs-lisp

  #+end_src

** Using value and default updater
   If you want to add just one element to a list testlist (similar to ~add-to-list~), you can use any of these

   #+begin_src emacs-lisp
     (use-package emacs
       :custom-update
       (testlist '(1))
       (testlist (1))
       ;; NB: don't try to add functions to the list this way!
       (testlist 1))
   #+end_src


   Add more than one element

   #+begin_src emacs-lisp
     (use-package emacs
       :custom-update
       (testlist '(1 2))
       (testlist (1 3)))
   #+end_src

   By default a variable is modified by ~use-package-custom-update-union~ function, which takes a variable value (or its symbol, if ~use-package-custom-update-updater-use-symbol~ is set to true) as the first argument, and the supplied updater second, you can customize it by setting ~use-package-custom-update-default-updater~ function.


** Using a function

   #+begin_src emacs-lisp
     (use-package emacs
       :custom-update
       (testlist (lambda (old-value)
                   (append old-value '(1 2 3)))))
   #+end_src
